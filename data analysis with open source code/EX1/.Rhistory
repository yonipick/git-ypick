x <- matrix(1:4,2,2)
var(x)
var(as.vector(x))
mean(as.vector(x))
mean(as.vector(x^2))-2.5^2
var(as.vector(x))*3/4
mean_and_var <- function(x, use.sum=TRUE){
#  mean_and_var - return a list with two components named mean and var
#  x - numric vector or metrix
#  use.sum - if use.sum set to false calculte the mean and var using for loops. if set to true (default) use the sum() function
stopifnot(is.numeric(x),length(x) > 1)
if (use.sum) {
mean <- sum(x)/length(x)
var <- sum(x^2)/length(x)-mean^2
}
else{
s = 0
s2 = 0
for (i in x) {
s <- s+i
s2 <- s2+i^2
}
mean <- s/length(x)
var <- s2/length(x)-mean
}
res <-  c(mean,var)
return (res)
}
mean_and_var(x)
mean_and_var(x,use.sum = FALSE)
mean_and_var <- function(x, use.sum=TRUE){
#  mean_and_var - return a list with two components named mean and var
#  x - numric vector or metrix
#  use.sum - if use.sum set to false calculte the mean and var using for loops. if set to true (default) use the sum() function
stopifnot(is.numeric(x),length(x) > 1)
if (use.sum) {
mean <- sum(x)/length(x)
var <- sum(x^2)/length(x)-mean^2
}
else{
s = 0
s2 = 0
for (i in as.vector(x)) {
s <- s+i
s2 <- s2+i^2
}
mean <- s/length(x)
var <- s2/length(x)-mean
}
res <-  c(mean,var)
return (res)
}
mean_and_var(x,use.sum = FALSE)
mean_and_var(x,use.sum = FALSE)
y <- as.vector(x)
mean_and_var(y,use.sum = FALSE)
mean_and_var(y,use.sum = FALSE)
mean_and_var(y,use.sum = FALSE)
s <- 0
for (i in y){}
for (i in y){
s <- s + i }
s <- 0
for (i in y){
s <- s + i^2 }
s/length(y)
mean_and_var <- function(x, use.sum=TRUE){
#  mean_and_var - return a list with two components named mean and var
#  x - numric vector or metrix
#  use.sum - if use.sum set to false calculte the mean and var using for loops. if set to true (default) use the sum() function
stopifnot(is.numeric(x),length(x) > 1)
if (use.sum) {
mean <- sum(x)/length(x)
var <- sum(x^2)/length(x)-mean^2
}
else{
s <-  0
s2 <-  0
for (i in as.vector(x)) {
s <- s+i
s2 <- s2+i^2
}
mean <- s/length(x)
var <- s2/length(x)-mean^2
}
res <-  c(mean,var)
return (res)
}
mean_and_var(y,use.sum = FALSE)
mean_and_var <- function(x, use.sum=TRUE){
#'  mean_and_var - return a list with two components named mean and var
#'  x - numric vector or metrix
#'  use.sum - if use.sum set to false calculte the mean and var using for loops. if set to true (default) use the sum() function
stopifnot(is.numeric(x),length(x) > 1)
if (use.sum) {
mean <- sum(x)/length(x)
var <- sum(x^2)/length(x)-mean^2
}
else{
s <-  0
s2 <-  0
for (i in as.vector(x)) {
s <- s+i
s2 <- s2+i^2
}
mean <- s/length(x)
var <- s2/length(x)-mean^2
}
res <-  c(mean,var)
return (res)
}
mean_and_var()
?mean_and_var
??mean_and_var
d <- c(1,2,3)
mean_and_var(d)
var(d)
y <- matrix(1:1000,1000,1000)
r2 <- mean_and_var(y)
print(r2)
t1 <- system.time(mean_and_var(y))['elapsed']
print(t1)
t2 <- system.time(mean_and_var(y,use.sum = FALSE))['elapsed']
print(t2)
mat <- matrix(rnorm(200*5,5,10),200,5)
col_mean <- apply(mat,2,mean)
print(col_mean)
col_var <- apply(mat,2,var)
print(col_var)
set.seed(123)
mat <- matrix(rnorm(200*5,5,10),200,5)
col_mean <- apply(mat,2,mean)
print(col_mean)
col_var <- apply(mat,2,var)
print(col_var)
sapply(test_data, class)
# Q3 ----------------------------------------------------------------------
data <- read.csv("2017 World Happiness Report.csv",header = TRUE,sep = ',')
#' number of observation
print(nrow(data))
#' number of variables
print(ncol(data))
test_data <- subset(data, select = -c(Happiness.Rank, Whisker.high, Whisker.low, Dystopia.Residual) )
colnames(test_data)[colnames(test_data)=="Happiness.Score"] <- "Happiness"
colnames(test_data)[colnames(test_data)=="Economy..GDP.per.Capita."] <- "Economy"
colnames(test_data)[colnames(test_data)=="Health..Life.Expectancy."] <- "Health"
colnames(test_data)[colnames(test_data)=="Trust..Government.Corruption."] <- "Trust"
#' the type for each class
sapply(test_data, class)
data <- read.csv("2017 World Happiness Report.csv",header = TRUE,sep = ',')
#' number of observation
print(nrow(data))
#' number of variables
print(ncol(data))
test_data <- subset(data, select = -c(Happiness.Rank, Whisker.high, Whisker.low, Dystopia.Residual) )
colnames(test_data)[colnames(test_data)=="Happiness.Score"] <- "Happiness"
colnames(test_data)[colnames(test_data)=="Economy..GDP.per.Capita."] <- "Economy"
colnames(test_data)[colnames(test_data)=="Health..Life.Expectancy."] <- "Health"
colnames(test_data)[colnames(test_data)=="Trust..Government.Corruption."] <- "Trust"
#' the type for each class
sapply(test_data, class)
setwd("D:/Git/afeka/data analysis with open source code/EX1")
data <- read.csv("2017 World Happiness Report.csv",header = TRUE,sep = ',')
#' number of observation
print(nrow(data))
#' number of variables
print(ncol(data))
test_data <- subset(data, select = -c(Happiness.Rank, Whisker.high, Whisker.low, Dystopia.Residual) )
colnames(test_data)[colnames(test_data)=="Happiness.Score"] <- "Happiness"
colnames(test_data)[colnames(test_data)=="Economy..GDP.per.Capita."] <- "Economy"
colnames(test_data)[colnames(test_data)=="Health..Life.Expectancy."] <- "Health"
colnames(test_data)[colnames(test_data)=="Trust..Government.Corruption."] <- "Trust"
#' the type for each class
sapply(test_data, class)
sapply(test_data, class)
levels((test_data$Region))
summary(test_data$Happiness)
summary(test_data$Happiness)[c('Min.','Max.','Mean')]
library(ggplot2)
p1 <- ggplot(data = test_data,mapping = aes(x=test_data$Economy,y=test_data$Happiness))+ geom_point(aes(color= 'cly'))+ geom_smooth(method = 'lm')+ xlab("Economy")+ ylab("Happiness")
p2 <- ggplot(data = test_data,mapping = aes(x=test_data$Family,y=test_data$Happiness))+ geom_point(aes(color= 'r'))+ geom_smooth(method = 'lm')+ xlab("Family")+ ylab("Happiness")
p3 <- ggplot(data = test_data,mapping = aes(x=test_data$Health,y=test_data$Happiness))+ geom_point(aes(color= 'r'))+ geom_smooth(method = 'lm')+ xlab("Health")+ ylab("Happiness")
p4 <- ggplot(data = test_data,mapping = aes(x=test_data$Freedom,y=test_data$Happiness))+ geom_point(aes(color= 'r'))+ geom_smooth(method = 'lm')+ xlab("Freedom")+ ylab("Happiness")
p5 <- ggplot(data = test_data,mapping = aes(x=test_data$Generosity,y=test_data$Happiness))+ geom_point(aes(color= 'r'))+ geom_smooth(method = 'lm')+ xlab("Generosity")+ ylab("Happiness")
p6 <- ggplot(data = test_data,mapping = aes(x=test_data$Trust,y=test_data$Happiness))+ geom_point(aes(color= 'r'))+ geom_smooth(method = 'lm')+ xlab("Trust")+ ylab("Happiness")
ggarrange(p1,p2,p3,p4,p5,p6, ncol = 2,nrow = 3)
library("GGally", lib.loc="D:/Program Files/R/R-3.5.1/library")
library("ggplot2", lib.loc="D:/Program Files/R/R-3.5.1/library")
library("grid", lib.loc="D:/Program Files/R/R-3.5.1/library")
ggarrange(p1,p2,p3,p4,p5,p6, ncol = 2,nrow = 3)
library(ggpubr)
install.packages("ggpubr")
library(ggpubr)
ggarrange(p1,p2,p3,p4,p5,p6, ncol = 2,nrow = 3)
p1 <- ggplot(data = test_data,mapping = aes(x=test_data$Economy,y=test_data$Happiness))+ geom_point(aes(color= 'cly'))+ geom_smooth(method = 'lm')+ xlab("Economy")+ ylab("Happiness")
p2 <- ggplot(data = test_data,mapping = aes(x=test_data$Family,y=test_data$Happiness))+ geom_point(aes(color= 'r'))+ geom_smooth(method = 'lm')+ xlab("Family")+ ylab("Happiness")
p3 <- ggplot(data = test_data,mapping = aes(x=test_data$Health,y=test_data$Happiness))+ geom_point(aes(color= 'r'))+ geom_smooth(method = 'lm')+ xlab("Health")+ ylab("Happiness")
p4 <- ggplot(data = test_data,mapping = aes(x=test_data$Freedom,y=test_data$Happiness))+ geom_point(aes(color= 'r'))+ geom_smooth(method = 'lm')+ xlab("Freedom")+ ylab("Happiness")
p5 <- ggplot(data = test_data,mapping = aes(x=test_data$Generosity,y=test_data$Happiness))+ geom_point(aes(color= 'r'))+ geom_smooth(method = 'lm')+ xlab("Generosity")+ ylab("Happiness")
p6 <- ggplot(data = test_data,mapping = aes(x=test_data$Trust,y=test_data$Happiness))+ geom_point(aes(color= 'r'))+ geom_smooth(method = 'lm')+ xlab("Trust")+ ylab("Happiness")
library(ggpubr)
ggarrange(p1,p2,p3,p4,p5,p6, ncol = 2,nrow = 3)
p1 <- ggplot(data = test_data,mapping = aes(x=test_data$Economy,y=test_data$Happiness))+ geom_point(aes(color= 'cly'))+ geom_smooth(method = 'lm')+ xlab("Economy")+ ylab("Happiness")
p2 <- ggplot(data = test_data,mapping = aes(x=test_data$Family,y=test_data$Happiness))+ geom_point(aes(color= 'r'))+ geom_smooth(method = 'lm')+ xlab("Family")+ ylab("Happiness")
p3 <- ggplot(data = test_data,mapping = aes(x=test_data$Health,y=test_data$Happiness))+ geom_point(aes(color= 'r'))+ geom_smooth(method = 'lm')+ xlab("Health")+ ylab("Happiness")
p4 <- ggplot(data = test_data,mapping = aes(x=test_data$Freedom,y=test_data$Happiness))+ geom_point(aes(color= 'r'))+ geom_smooth(method = 'lm')+ xlab("Freedom")+ ylab("Happiness")
p5 <- ggplot(data = test_data,mapping = aes(x=test_data$Generosity,y=test_data$Happiness))+ geom_point(aes(color= 'r'))+ geom_smooth(method = 'lm')+ xlab("Generosity")+ ylab("Happiness")
p6 <- ggplot(data = test_data,mapping = aes(x=test_data$Trust,y=test_data$Happiness))+ geom_point(aes(color= 'r'))+ geom_smooth(method = 'lm')+ xlab("Trust")+ ylab("Happiness")
# library(ggpubr)
ggarrange(p1,p2,p3,p4,p5,p6, ncol = 2,nrow = 3)
ggarrange(p1,p2,p3,p4,p5,p6, ncol = 2,nrow = 3)
ggplot(test_data,aes(x=test_data$Economy,y=test_data$Happiness, color = test_data$Region)) + geom_point() +
labs(x="Economy",y="Happiness") +
geom_smooth(method = 'lm',se = FALSE)
ggplot(data = test_data,aes(Region)) + geom_bar(aes(fill = Region))
ggplot(data = test_data,aes(Region)) + coord_flip() + geom_bar(aes(fill = Region))
ggplot(data = test_data,aes(x=Region, y=Happiness)) +
geom_boxplot(mapping = aes(x = reorder(Region,Happiness,FUN=median),y=Happiness)) +
geom_boxplot(aes(fill = Region))
ggplot(data = test_data,aes(Region)) + coord_flip() + geom_bar(aes(fill = Region))
ggplot(data = test_data,aes(x=Region, y=Happiness)) +
coord_flip() +
geom_boxplot(mapping = aes(x = reorder(Region,Happiness,FUN=median),y=Happiness)) +
geom_boxplot(aes(fill = Region))
ggplot(data = test_data,aes(x=Region, y=Happiness)) +
coord_flip() +
geom_boxplot(mapping = aes(x = reorder(Region,Happiness,FUN=mean),y=Happiness)) +
geom_boxplot(aes(fill = Region))
library(GGally)
ggpairs(test_data, columns = 3:9)
